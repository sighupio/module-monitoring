# Copyright (c) 2017-present SIGHUP s.r.l All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.

name: license
kind: pipeline
type: docker
node:
  performance: low
clone:
  depth: 1
steps:
  - name: check
    image: docker.io/library/golang:1.21
    pull: always
    commands:
      - go install github.com/google/addlicense@v1.1.1
      - addlicense -c "SIGHUP s.r.l" -v -l bsd --check .

---
name: linting
kind: pipeline
type: docker
node:
  performance: low
depends_on:
  - license
clone:
  depth: 1
platform:
  os: linux
  arch: amd64
volumes:
  - name: mise-cache
    host:
      path: /root/mise_data_dir
steps:
  - name: render
    image: quay.io/sighup/mise:v2025.4.4
    pull: always
    environment:
      MISE_DATA_DIR: /mise-data
      MISE_OVERRIDE_CONFIG_FILENAMES: "mise.ci.toml"
      GITHUB_TOKEN:
        from_secret: github_token
    volumes:
      - name: mise-cache
        path: /mise-data
    depends_on:
      - clone
    commands:
      - |
        mise use kustomize@5.6.0
        eval "$(mise activate bash --shims)"
      - kustomize build katalog/aks-sm > aks-sm.yml
      - kustomize build katalog/alertmanager-operated > alertmanager-operated.yml
      - kustomize build katalog/blackbox-exporter > blackbox-exporter.yml
      - kustomize build katalog/configs > configs.yml
      - kustomize build katalog/eks-sm > eks-sm.yml
      - kustomize build katalog/gke-sm > gke-sm.yml
      - kustomize build katalog/grafana > grafana.yml
      - kustomize build katalog/haproxy > haproxy.yml
      - kustomize build katalog/karma > karma.yml
      - kustomize build katalog/kube-proxy-metrics > kube-proxy-metrics.yml
      - kustomize build katalog/kube-state-metrics > kube-state-metrics.yml
      - kustomize build katalog/kubeadm-sm > kubeadm-sm.yml
      - kustomize build katalog/mimir > mimir.yml
      - kustomize build katalog/minio-ha > minio-ha.yml
      - kustomize build katalog/node-exporter > node-exporter.yml
      - kustomize build katalog/prometheus-adapter > prometheus-adapter.yml
      - kustomize build katalog/prometheus-operated > prometheus-operated.yml
      - kustomize build katalog/prometheus-operator > prometheus-operator.yml
      - kustomize build katalog/x509-exporter > x509-exporter.yml

  - &check-deprecated-apis
    name: check-deprecated-apis-alertmanager-operated
    image: us-docker.pkg.dev/fairwinds-ops/oss/pluto:v5
    pull: always
    depends_on:
      - render
    commands:
      # we use --ignore-deprecations because we don't want the CI to fail when the API has not been removed yet.
      - /pluto detect $${KUBERNETES_MANIFESTS} --ignore-deprecations --target-versions=k8s=v1.33.0
    environment:
      KUBERNETES_MANIFESTS: alertmanager-operated.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-aks-sm
    environment:
      KUBERNETES_MANIFESTS: aks-sm.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-blackbox-exporter
    environment:
      KUBERNETES_MANIFESTS: blackbox-exporter.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-configs
    environment:
      KUBERNETES_MANIFESTS: configs.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-eks-sm
    environment:
      KUBERNETES_MANIFESTS: eks-sm.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-gke-sm
    environment:
      KUBERNETES_MANIFESTS: gke-sm.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-grafana
    environment:
      KUBERNETES_MANIFESTS: grafana.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-haproxy
    environment:
      KUBERNETES_MANIFESTS: haproxy.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-karma
    environment:
      KUBERNETES_MANIFESTS: karma.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-kube-proxy-metrics
    environment:
      KUBERNETES_MANIFESTS: kube-proxy-metrics.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-kube-state-metrics
    environment:
      KUBERNETES_MANIFESTS: kube-state-metrics.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-kubeadm-sm
    environment:
      KUBERNETES_MANIFESTS: kubeadm-sm.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-mimir
    environment:
      KUBERNETES_MANIFESTS: mimir.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-minio-ha
    environment:
      KUBERNETES_MANIFESTS: minio-ha.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-node-exporter
    environment:
      KUBERNETES_MANIFESTS: node-exporter.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-prometheus-adapter
    environment:
      KUBERNETES_MANIFESTS: prometheus-adapter.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-prometheus-operator
    environment:
      KUBERNETES_MANIFESTS: prometheus-operator.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-prometheus-operated
    environment:
      KUBERNETES_MANIFESTS: prometheus-operated.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-x509-exporter
    environment:
      KUBERNETES_MANIFESTS: x509-exporter.yml

  - name: Prometheus Rules Linting
    image: quay.io/sighup/mise:v2025.4.4
    pull: always
    environment:
      MISE_DATA_DIR: /mise-data
      MISE_OVERRIDE_CONFIG_FILENAMES: "mise.ci.toml"
      GITHUB_TOKEN:
        from_secret: github_token
    volumes:
      - name: mise-cache
        path: /mise-data
    commands:
      - |
        mise use promtool@2.54.1 yq@4.43.1
        eval "$(mise activate bash --shims)"
      - bash katalog/tests/promtool.sh
    when:
      event:
        - push
        - tag

---
name: E2E Tests on kind clusters version 1.29.8
kind: pipeline
type: docker
platform:
  os: linux
  arch: amd64
depends_on:
  - linting
clone:
  depth: 1
trigger:
  ref:
    include:
      - refs/tags/**

environment:
  # Mise configuration
  MISE_DATA_DIR: "/mise-data"
  MISE_OVERRIDE_CONFIG_FILENAMES: "mise.ci.toml"
  KIND_VERSION: "0.29.0"
  KUBECTL_VERSION: "1.29.1"
  BATS_VERSION: "1.11.0"
  CLUSTER_VERSION: "1.29.8"

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
  - name: mise-cache
    host:
      path: /root/mise_data_dir

steps:
  - name: Create Kind Cluster
    image: quay.io/sighup/mise:v2025.4.4
    pull: always
    environment:
      GITHUB_TOKEN:
        from_secret: github_token
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
      - name: mise-cache
        path: /mise-data
    depends_on:
      - clone
    commands:
      - mise use kind@$${KIND_VERSION} kubectl@$${KUBECTL_VERSION} kustomize@5.6.0
      - eval "$(mise activate bash --shims)"
      - ./scripts/create-e2e-cluster.sh $${CLUSTER_VERSION}

  - name: Run E2E Tests
    image: quay.io/sighup/mise:v2025.4.4
    pull: always
    environment:
      GITHUB_TOKEN:
        from_secret: github_token
    volumes:
      - name: mise-cache
        path: /mise-data
    depends_on:
      - Create Kind Cluster
    commands:
      - mise use bats@$${BATS_VERSION} kubectl@$${KUBECTL_VERSION} kustomize@5.6.0 kapp@0.64.2
      - eval "$(mise activate bash --shims)"
      - ./scripts/run-monitoring-tests.sh

  - name: Delete Kind Cluster
    image: quay.io/sighup/mise:v2025.4.4
    pull: always
    environment:
      GITHUB_TOKEN:
        from_secret: github_token
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
      - name: mise-cache
        path: /mise-data
    depends_on:
      - Run E2E Tests
    when:
      status:
        - success
        - failure
    commands:
      - mise use kind@$${KIND_VERSION}
      - eval "$(mise activate bash --shims)"
      - ./scripts/cleanup-e2e-cluster.sh || true

---
name: E2E Tests on kind clusters version 1.30.4
kind: pipeline
type: docker
platform:
  os: linux
  arch: amd64
depends_on:
  - linting
clone:
  depth: 1
trigger:
  ref:
    include:
      - refs/tags/**

environment:
  # Mise configuration
  MISE_DATA_DIR: "/mise-data"
  MISE_OVERRIDE_CONFIG_FILENAMES: "mise.ci.toml"
  KIND_VERSION: "0.29.0"
  KUBECTL_VERSION: "1.30.4"
  BATS_VERSION: "1.11.0"
  CLUSTER_VERSION: "1.30.4"

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
  - name: mise-cache
    host:
      path: /root/mise_data_dir

steps:
  - name: Create Kind Cluster
    image: quay.io/sighup/mise:v2025.4.4
    pull: always
    environment:
      GITHUB_TOKEN:
        from_secret: github_token
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
      - name: mise-cache
        path: /mise-data
    depends_on:
      - clone
    commands:
      - mise use kind@$${KIND_VERSION} kubectl@$${KUBECTL_VERSION} kustomize@5.6.0
      - eval "$(mise activate bash --shims)"
      - ./scripts/create-e2e-cluster.sh $${CLUSTER_VERSION}

  - name: Run E2E Tests
    image: quay.io/sighup/mise:v2025.4.4
    pull: always
    environment:
      GITHUB_TOKEN:
        from_secret: github_token
    volumes:
      - name: mise-cache
        path: /mise-data
    depends_on:
      - Create Kind Cluster
    commands:
      - mise use bats@$${BATS_VERSION} kubectl@$${KUBECTL_VERSION} kustomize@5.6.0 kapp@0.64.2
      - eval "$(mise activate bash --shims)"
      - ./scripts/run-monitoring-tests.sh

  - name: Delete Kind Cluster
    image: quay.io/sighup/mise:v2025.4.4
    pull: always
    environment:
      GITHUB_TOKEN:
        from_secret: github_token
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
      - name: mise-cache
        path: /mise-data
    depends_on:
      - Run E2E Tests
    when:
      status:
        - success
        - failure
    commands:
      - mise use kind@$${KIND_VERSION}
      - eval "$(mise activate bash --shims)"
      - ./scripts/cleanup-e2e-cluster.sh || true

---
name: E2E Tests on kind clusters version 1.31.1
kind: pipeline
type: docker
platform:
  os: linux
  arch: amd64
depends_on:
  - linting
clone:
  depth: 1
trigger:
  ref:
    include:
      - refs/tags/**

environment:
  # Mise configuration
  MISE_DATA_DIR: "/mise-data"
  MISE_OVERRIDE_CONFIG_FILENAMES: "mise.ci.toml"
  KIND_VERSION: "0.29.0"
  KUBECTL_VERSION: "1.31.1"
  BATS_VERSION: "1.11.0"
  CLUSTER_VERSION: "1.31.1"

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
  - name: mise-cache
    host:
      path: /root/mise_data_dir

steps:
  - name: Create Kind Cluster
    image: quay.io/sighup/mise:v2025.4.4
    pull: always
    environment:
      GITHUB_TOKEN:
        from_secret: github_token
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
      - name: mise-cache
        path: /mise-data
    depends_on:
      - clone
    commands:
      - mise use kind@$${KIND_VERSION} kubectl@$${KUBECTL_VERSION} kustomize@5.6.0
      - eval "$(mise activate bash --shims)"
      - ./scripts/create-e2e-cluster.sh $${CLUSTER_VERSION}

  - name: Run E2E Tests
    image: quay.io/sighup/mise:v2025.4.4
    pull: always
    environment:
      GITHUB_TOKEN:
        from_secret: github_token
    volumes:
      - name: mise-cache
        path: /mise-data
    depends_on:
      - Create Kind Cluster
    commands:
      - mise use bats@$${BATS_VERSION} kubectl@$${KUBECTL_VERSION} kustomize@5.6.0 kapp@0.64.2
      - eval "$(mise activate bash --shims)"
      - ./scripts/run-monitoring-tests.sh

  - name: Delete Kind Cluster
    image: quay.io/sighup/mise:v2025.4.4
    pull: always
    environment:
      GITHUB_TOKEN:
        from_secret: github_token
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
      - name: mise-cache
        path: /mise-data
    depends_on:
      - Run E2E Tests
    when:
      status:
        - success
        - failure
    commands:
      - mise use kind@$${KIND_VERSION}
      - eval "$(mise activate bash --shims)"
      - ./scripts/cleanup-e2e-cluster.sh || true

---
name: E2E Tests on kind clusters version 1.32.2
kind: pipeline
type: docker
platform:
  os: linux
  arch: amd64
depends_on:
  - linting
clone:
  depth: 1
trigger:
  ref:
    include:
      - refs/tags/**

environment:
  # Mise configuration
  MISE_DATA_DIR: "/mise-data"
  MISE_OVERRIDE_CONFIG_FILENAMES: "mise.ci.toml"
  KIND_VERSION: "0.29.0"
  KUBECTL_VERSION: "1.32.2"
  BATS_VERSION: "1.11.0"
  CLUSTER_VERSION: "1.32.2"

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
  - name: mise-cache
    host:
      path: /root/mise_data_dir

steps:
  - name: Create Kind Cluster
    image: quay.io/sighup/mise:v2025.4.4
    pull: always
    environment:
      GITHUB_TOKEN:
        from_secret: github_token
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
      - name: mise-cache
        path: /mise-data
    depends_on:
      - clone
    commands:
      - mise use kind@$${KIND_VERSION} kubectl@$${KUBECTL_VERSION} kustomize@5.6.0
      - eval "$(mise activate bash --shims)"
      - ./scripts/create-e2e-cluster.sh $${CLUSTER_VERSION}

  - name: Run E2E Tests
    image: quay.io/sighup/mise:v2025.4.4
    pull: always
    environment:
      GITHUB_TOKEN:
        from_secret: github_token
    volumes:
      - name: mise-cache
        path: /mise-data
    depends_on:
      - Create Kind Cluster
    commands:
      - mise use bats@$${BATS_VERSION} kubectl@$${KUBECTL_VERSION} kustomize@5.6.0 kapp@0.64.2
      - eval "$(mise activate bash --shims)"
      - ./scripts/run-monitoring-tests.sh

  - name: Delete Kind Cluster
    image: quay.io/sighup/mise:v2025.4.4
    pull: always
    environment:
      GITHUB_TOKEN:
        from_secret: github_token
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
      - name: mise-cache
        path: /mise-data
    depends_on:
      - Run E2E Tests
    when:
      status:
        - success
        - failure
    commands:
      - mise use kind@$${KIND_VERSION}
      - eval "$(mise activate bash --shims)"
      - ./scripts/cleanup-e2e-cluster.sh || true

---
name: E2E Tests on kind clusters version 1.33.0
kind: pipeline
type: docker
platform:
  os: linux
  arch: amd64
depends_on:
  - linting
clone:
  depth: 1
trigger:
  ref:
    include:
      - refs/tags/**

environment:
  # Mise configuration
  MISE_DATA_DIR: "/mise-data"
  MISE_OVERRIDE_CONFIG_FILENAMES: "mise.ci.toml"
  KIND_VERSION: "0.29.0"
  KUBECTL_VERSION: "1.33.4"
  BATS_VERSION: "1.11.0"
  CLUSTER_VERSION: "1.33.0"

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
  - name: mise-cache
    host:
      path: /root/mise_data_dir

steps:
  - name: Create Kind Cluster
    image: quay.io/sighup/mise:v2025.4.4
    pull: always
    environment:
      GITHUB_TOKEN:
        from_secret: github_token
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
      - name: mise-cache
        path: /mise-data
    depends_on:
      - clone
    commands:
      - mise use kind@$${KIND_VERSION} kubectl@$${KUBECTL_VERSION} kustomize@5.6.0
      - eval "$(mise activate bash --shims)"
      - ./scripts/create-e2e-cluster.sh $${CLUSTER_VERSION}

  - name: Run E2E Tests
    image: quay.io/sighup/mise:v2025.4.4
    pull: always
    environment:
      GITHUB_TOKEN:
        from_secret: github_token
    volumes:
      - name: mise-cache
        path: /mise-data
    depends_on:
      - Create Kind Cluster
    commands:
      - mise use bats@$${BATS_VERSION} kubectl@$${KUBECTL_VERSION} kustomize@5.6.0 kapp@0.64.2
      - eval "$(mise activate bash --shims)"
      - ./scripts/run-monitoring-tests.sh

  - name: Delete Kind Cluster
    image: quay.io/sighup/mise:v2025.4.4
    pull: always
    environment:
      GITHUB_TOKEN:
        from_secret: github_token
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
      - name: mise-cache
        path: /mise-data
    depends_on:
      - Run E2E Tests
    when:
      status:
        - success
        - failure
    commands:
      - mise use kind@$${KIND_VERSION}
      - eval "$(mise activate bash --shims)"
      - ./scripts/cleanup-e2e-cluster.sh || true

---
name: release
kind: pipeline
type: docker
node:
  performance: low
clone:
  depth: 1
depends_on:
  - E2E Tests on kind clusters version 1.29.8
  - E2E Tests on kind clusters version 1.30.4
  - E2E Tests on kind clusters version 1.31.1
  - E2E Tests on kind clusters version 1.32.2
  - E2E Tests on kind clusters version 1.33.0
platform:
  os: linux
  arch: amd64
trigger:
  ref:
    include:
      - refs/tags/**
    exclude:
      - refs/tags/e2e-**
steps:
  - name: prepare-tar-gz
    image: alpine:latest
    pull: always
    depends_on: [clone]
    commands:
      - tar -zcvf fury-kubernetes-monitoring-${DRONE_TAG}.tar.gz katalog/ LICENSE README.md
    when:
      ref:
        include:
          - refs/tags/**

  - name: prepare-release-notes
    image: quay.io/sighup/fury-release-notes-plugin:3.7_2.8.4
    pull: always
    depends_on: [clone]
    settings:
      release_notes_file_path: release-notes.md
    when:
      ref:
        include:
          - refs/tags/**

  - name: publish-prerelease
    image: plugins/github-release
    pull: always
    depends_on:
      - prepare-tar-gz
      - prepare-release-notes
    settings:
      api_key:
        from_secret: github_token
      file_exists: overwrite
      files:
        - fury-kubernetes-monitoring-${DRONE_TAG}.tar.gz
      prerelease: true
      overwrite: true
      title: "Preview ${DRONE_TAG}"
      note: release-notes.md
      checksum:
        - md5
        - sha256
    when:
      ref:
        include:
          - refs/tags/v**-rc**

  - name: publish-stable
    image: plugins/github-release
    pull: always
    depends_on:
      - prepare-tar-gz
      - prepare-release-notes
    settings:
      api_key:
        from_secret: github_token
      file_exists: overwrite
      files:
        - fury-kubernetes-monitoring-${DRONE_TAG}.tar.gz
      prerelease: false
      overwrite: true
      title: "Release ${DRONE_TAG}"
      note: release-notes.md
      checksum:
        - md5
        - sha256
    when:
      ref:
        exclude:
          - refs/tags/v**-rc**
        include:
          - refs/tags/v**
