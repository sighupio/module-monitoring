# Copyright (c) 2017-present SIGHUP s.r.l All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.

[tools]
kind = "0.29.0"
kubectl = "1.33.4"
kustomize = "5.6.0"
helm = "3.15.0"
yq = "4.43.1"
go = "1.23"
bats = "1.11.0"
dyff = "1.9.0"
drone = "1.9.0"
kapp = "0.64.2"     # For GitOps-style deployments
"ubi:google/addlicense" = "v1.1.1"
promtool = "2.54.1"
stern = "1.33.0"    # For log monitoring during tests

# Development task definitions
[tasks.add-license]
description = "Add license headers to all files"
run = '''
echo "📄 Adding license headers..."
addlicense -c "SIGHUP s.r.l" -y "2017-present" -v -l bsd {{config_root}}
echo "✅ License headers added!"
'''

[tasks.validate-manifests]
description = "Validate all manifests can be built"
run = '''
echo "🔍 Validating manifest builds..."
kustomize build {{config_root}}/katalog/aks-sm > /dev/null && echo "  ✅ aks-sm"
kustomize build {{config_root}}/katalog/alertmanager-operated > /dev/null && echo "  ✅ alertmanager-operated"
kustomize build {{config_root}}/katalog/blackbox-exporter > /dev/null && echo "  ✅ blackbox-exporter"
kustomize build {{config_root}}/katalog/configs > /dev/null && echo "  ✅ configs"
kustomize build {{config_root}}/katalog/eks-sm > /dev/null && echo "  ✅ eks-sm"
kustomize build {{config_root}}/katalog/gke-sm > /dev/null && echo "  ✅ gke-sm"
kustomize build {{config_root}}/katalog/grafana > /dev/null && echo "  ✅ grafana"
kustomize build {{config_root}}/katalog/haproxy > /dev/null && echo "  ✅ haproxy"
kustomize build {{config_root}}/katalog/kube-proxy-metrics > /dev/null && echo "  ✅ kube-proxy-metrics"
kustomize build {{config_root}}/katalog/kube-state-metrics > /dev/null && echo "  ✅ kube-state-metrics"
kustomize build {{config_root}}/katalog/kubeadm-sm > /dev/null && echo "  ✅ kubeadm-sm"
kustomize build {{config_root}}/katalog/mimir > /dev/null && echo "  ✅ mimir"
kustomize build {{config_root}}/katalog/minio-ha > /dev/null && echo "  ✅ minio-ha"
kustomize build {{config_root}}/katalog/node-exporter > /dev/null && echo "  ✅ node-exporter"
kustomize build {{config_root}}/katalog/prometheus-adapter > /dev/null && echo "  ✅ prometheus-adapter"
kustomize build {{config_root}}/katalog/prometheus-operator > /dev/null && echo "  ✅ prometheus-operator"
kustomize build {{config_root}}/katalog/x509-exporter > /dev/null && echo "  ✅ x509-exporter"
echo "✅ All manifests validated!"
'''

[tasks.validate-prometheus-rules]
run = "bash {{config_root}}/katalog/tests/promtool.sh"

[tasks.setup]
description = "Complete development environment setup"
depends = ["add-license", "validate-manifests", "validate-prometheus-rules"]
run = 'echo "✅ Development environment ready!"'

[tasks.e2e]
description = "Run complete E2E test suite with Kind cluster (K8s 1.33)"
run = '''
#!/bin/bash
set -e
echo "🚀 Running Monitoring E2E workflow..."
./scripts/create-e2e-cluster.sh 1.33.0
./scripts/run-monitoring-tests.sh
./scripts/cleanup-e2e-cluster.sh
echo "✅ Monitoring E2E workflow completed!"
'''

# Individual E2E workflow components
[tasks.e2e-create-cluster]
description = "Create Kind cluster for monitoring E2E testing"
run = "./scripts/create-e2e-cluster.sh 1.33.0"

[tasks.e2e-run-tests]
description = "Run monitoring E2E tests on existing cluster"
run = "./scripts/run-monitoring-tests.sh"

[tasks.e2e-cleanup]
description = "Clean up E2E test cluster and artifacts"
run = "./scripts/cleanup-e2e-cluster.sh"
